name: Continuous Integration

on: [push, pull_request]

jobs:
  code-quality-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry  # Chemin où Poetry stocke ses dépendances
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry package manager
        run: |
            curl -sSL https://install.python-poetry.org | python3 -
            echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Synchronize poetry.lock
        run: |
          if [ -f "poetry.lock" ]; then
            poetry lock --no-update
          else
            echo "No poetry.lock file found, skipping lock synchronization"
          fi

      - name: Install project dependencies
        run: poetry install
        
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=${{ github.workspace }}/projet_kbd" >> $GITHUB_ENV

      - name: Format code with Black
        run: poetry run black .
      
      - name: Format code with Flake8
        run: poetry run flake8 .

      # - name: Run unit tests with Pytest
      #   run: poetry run pytest -v
      
      - name: Run tests with coverage
        run: |
          poetry run coverage run -m pytest -v
          poetry run coverage report --fail-under=80  # Fails if coverage is below 80%